{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/cart/cart.component.ts","webpack:///src/app/components/cart/cart.component.html","webpack:///src/app/components/checkout/checkout.component.ts","webpack:///src/app/components/checkout/checkout.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/product-detail/product.component.ts","webpack:///src/app/components/product-detail/product.component.html","webpack:///src/app/components/products/products.component.ts","webpack:///src/app/components/products/products.component.html","webpack:///src/app/services/products.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","loggedIn","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CartComponent","productsService","console","log","products","CheckoutComponent","LoginComponent","fb","form","group","email","password","ProductComponent","product","selectedProduct","color","ProductsComponent","router","loaded","brands","setState","getProducts","subscribe","allProducts","productType","getProductsByType","getBrands","navigate","bool","brand","idx","indexOf","push","splice","length","filterBrands","resetSearch","ProductsService","http","URL","undefined","filter","i","get","type","prod","category","forEach","providedIn","environment","production","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProductsComponent } from './components/products/products.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ProductComponent } from './components/product-detail/product.component';\nimport { CartComponent } from './components/cart/cart.component';\n\n\nconst routes: Routes = [\n  {path: \"\", redirectTo: '/products', pathMatch:'full'},\n  {path: 'login', component: LoginComponent},\n  {path: 'products', component: ProductsComponent},\n  {path: 'product/:id', component: ProductComponent},\n  {path: 'cart', component: CartComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ProductsService } from './services/products.service';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'makeup';\n \n  loggedIn = true;\n\n\n}\n","<mat-toolbar class=\"nav\" *ngIf=\"loggedIn\">\n  <mat-toolbar-row class=\"nav-bar-wrapper\">\n      <span *ngIf=\"!loggedIn\" [routerLink]=\"['/login']\" routerLinkActive=\"router-link-active\" >Login</span>\n      <span *ngIf=\"loggedIn\" [routerLink]=\"['/login']\" routerLinkActive=\"router-link-active\" >Logout</span>\n      <span [routerLink]=\"['/products']\" routerLinkActive=\"router-link-active\" >Products</span>\n      <span [routerLink]=\"['/cart']\" routerLinkActive=\"router-link-active\" >Cart</span>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ProductsComponent } from './components/products/products.component';\nimport { ProductComponent } from './components/product-detail/product.component';\nimport { CheckoutComponent } from './components/checkout/checkout.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { LoginComponent } from './components/login/login.component';\nimport { CartComponent } from './components/cart/cart.component';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCardModule } from '@angular/material/card';\nimport { FormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductsComponent,\n    ProductComponent,\n    CheckoutComponent,\n    LoginComponent,\n    CartComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ProductsService } from 'src/app/services/products.service';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss']\n})\nexport class CartComponent implements OnInit {\n\n  constructor(\n    private productsService: ProductsService\n  ) { }\n\n  ngOnInit(): void {\n    console.log(this.productsService.products)\n  }\n\n}\n","<p>cart works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.scss']\n})\nexport class CheckoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>checkout works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor(fb: FormBuilder) { \n    this.form = fb.group({\n      email: ['Email Goes Here'],\n      password: ['Password Goes Here']\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<mat-card>\n    <mat-card-title>Login</mat-card-title>\n    <mat-card-content>\n      <form [formGroup]=\"form\">\n  \n        <section>\n          <mat-form-field>\n            <input matInput type=\"text\" placeholder=\"Email\" formControlName=\"email\">\n          </mat-form-field>\n        </section>\n  \n        <section>\n          <mat-form-field>\n            <input matInput type=\"text\" placeholder=\"Password\" formControlName=\"password\">\n          </mat-form-field>\n        </section>\n\n        <button mat-raised-button>Login</button>\n  \n      </form>\n    </mat-card-content>\n  </mat-card>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProductsService } from 'src/app/services/products.service';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.scss']\n})\nexport class ProductComponent implements OnInit {\n\n  product\n  form: FormGroup;\n  constructor(\n    private productsService: ProductsService,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.product = this.productsService.selectedProduct\n    this.form = this.fb.group({\n      color: \"Yellow\"\n    })\n  }\n\n}\n","<div *ngIf=\"product\">\n    <mat-card style=\"margin-left: 20px; margin-top: 20px; max-width: 80%; border: 1px solid black\">\n        <div style=\"display: flex;\">\n            <div>\n                <img [src]=\"product.image_link\" alt=\"\">\n            </div>\n            <div class='product-details'>\n                <div>\n                    <mat-card-title>{{product.name}}</mat-card-title>\n                    <mat-card-subtitle>Brand: {{product.brand}}</mat-card-subtitle>\n                </div>\n                <div>\n                    <mat-card-content style = \"margin-bottom: 200px;\">{{product.description}}</mat-card-content>\n                    <mat-form-field [formGroup]='form'>\n                        <label>Color:</label>\n                        <mat-select formControlName=\"color\">\n                            <mat-option *ngFor=\"let color of product.product_colors\" [value] = \"color\">{{color.colour_name}}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-card-content>Price: {{product.price_sign}}{{product.price | number: '1.2-2'}} {{product.currency}}</mat-card-content>\n                </div>\n                <mat-card-actions>\n                    <button mat-raised-button>Add to Cart</button>\n                    <button mat-raised-button>Back</button>\n                </mat-card-actions>\n            </div>\n        </div>\n\n\n    </mat-card>\n    <div>\n        Possibly a review section\n    </div>\n</div>\n\n<div *ngIf=\"!product\">\n    Please Select a Product from <a href='/products'>Products Page</a>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ProductsService } from 'src/app/services/products.service';\nimport { Observable } from 'rxjs';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ThrowStmt } from '@angular/compiler';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss']\n})\nexport class ProductsComponent implements OnInit {\n\n  public products: any = [];\n  public loaded: boolean = false;\n  public productType: string;\n  public brands: string[] = [];\n\n  constructor(\n    public productsService: ProductsService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    if (this.productsService.loaded) {\n      this.setState(this.productsService.products, true);\n    }\n    else {\n      this.productsService.getProducts().subscribe(products => {\n        console.log(products);\n        this.setState(products, true);\n      })\n    }\n  }\n\n  resetSearch() {\n    this.products = this.productsService.allProducts;\n    this.productType = '';\n  }\n\n  getProductsByType() {\n    this.products = this.productsService.getProductsByType(this.productType);\n    this.productsService.getBrands();\n  }\n\n  selectProduct(product) {\n    this.productsService.selectedProduct = product;\n    this.router.navigate([`/product/${product.id}`]);\n  }\n\n  setState(products, bool: boolean): void {\n    this.loaded = bool;\n    this.products = products;\n  }\n\n  filterBrands(brand) {\n    let idx = this.brands.indexOf(brand);\n    if(idx == -1) {\n      this.brands.push(brand);\n    } else {\n      this.brands.splice(idx, 1);\n    }\n    if(this.brands.length == 0) {this.products = this.productsService.products}\n    else {this.products = this.productsService.filterBrands(this.brands)};\n  }\n\n  routeToDetails(product){\n    this.router.navigate(['/product', product])\n  }\n\n}\n\n","<mat-card class=\"search-wrapper\">\n    <div class=\"brand-search\">\n        <mat-form-field appearance=\"standard\">\n            <mat-label>Search Makeup</mat-label>\n            <input [(ngModel)]=\"productType\" matInput placeholder=\"Makeup types\">\n        </mat-form-field>\n        <button mat-raised-button class=\"search-brand-btn\" (click)=\"getProductsByType()\">Search</button>\n    </div>\n    <button mat-raised-button (click)=\"resetSearch()\">Reset</button>\n</mat-card>\n\n<div class=\"products-wrapper\">\n    <div *ngFor=\"let product of products\" class=\"products\">\n        <img class=\"product-image\" [src]=\"product.image_link\" />\n        <div class=\"product-brand\">{{ product.brand }}</div>\n        <div class=\"product-name\">{{ product.name }}</div>\n        <div class=\"product-price\">{{ product.price_sign }}{{ product.price }}</div>\n        <div class=\"buttons-wrapper\">\n            <button mat-raised-button (click)=\"selectProduct(product)\">Details</button>\n            <button mat-raised-button>Add to cart</button>\n        </div>\n    </div>\n</div>\n\n<mat-card class=\"side-bar-wrapper\">\n    <div class=\"brands-filter-wrapper\">\n        <div class=\"title\">Brands</div>\n        <div class=\"brands\" *ngIf=\"loaded\">\n            <div class=\"brand\" *ngFor=\"let brand of productsService.brands\">\n                <mat-checkbox (input)=\"filterBrands(brand)\">{{ brand }}</mat-checkbox>\n            </div>\n        </div>\n        <div *ngIf=\"loaded\" class=\"bg-fade\"></div>\n    </div>\n</mat-card>\n\n<div class=\"loading\" *ngIf=\"!loaded\"></div>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  private URL: string = 'http://makeup-api.herokuapp.com/api/v1/products.json';\n  public loaded: boolean = false;\n  public allProducts: any = '';\n  public products: any = '';\n  public brands: any = [];\n  public selectedProduct: any = undefined;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  filterBrands(brands) {\n    return this.products.filter(product => {\n      for(let i = 0; i < brands.length; i++) {\n        if(product.brand == brands[i]) return true;\n      }\n    })\n  }\n\n  getProducts() {\n    this.http.get<Observable<any>>(this.URL).subscribe(products => {\n      this.allProducts = products;\n      this.products = products;\n      this.loaded = true;\n      this.getBrands();\n    })\n    return this.http.get<Observable<any>>(this.URL);\n  }\n\n  getProductsByType(type: string) {\n    this.products = this.allProducts.filter(prod => {\n      return prod.category == type;\n    })\n    return this.products;\n  }\n  \n  getBrands() {\n    this.brands = [];\n    this.products.forEach(prod => {\n      if(this.brands.indexOf(prod.brand) == -1) {\n        this.brands.push(prod.brand);\n      }\n    })\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyDoTY8JSuaHj3raMc1mabQc15NZiaPq_OU',\n    authDomain: 'makeup-ecomm.firebaseapp.com',\n    databaseURL: 'https://makeup-ecomm.firebaseio.com',\n    projectId: 'makeup-ecomm',\n    storageBucket: 'makeup-ecomm.appspot.com',\n    messagingSenderId: '328071585805',\n    appId: '1:328071585805:web:13b69eecc1c11629a83544',\n    measurementId: 'G-GDQZ1JB366'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}